{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","props","todos","currentTodo","isModalVisible","onModalButton","onModalBtn","className","map","todo","index","todoId","id","title","completed","cn","type","onClick","TodoFilter","todoStatusSelect","searchQuery","onStatusSelect","onInputChange","value","onChange","event","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","userId","useState","user","setUser","isLoadedUser","setIsloadedUser","useEffect","getUser","finally","onCloseBtn","href","email","name","App","setTodos","visibleTodo","setVisibleTodo","isLoaded","setIsloaded","setIsModalVisible","setTodoStatusSelect","setSearchQuery","preparedTodos","filter","toLowerCase","includes","status","filterTodosByStatus","query","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.65a8d5ab.chunk.js","sourcesContent":["import { FC } from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[],\n  currentTodo: Todo | null,\n  isModalVisible: boolean,\n  onModalBtn: (currentTodo: Todo | null) => void,\n}\n\nexport const TodoList: FC<Props> = (props) => {\n  const {\n    todos,\n    currentTodo,\n    isModalVisible,\n    onModalBtn: onModalButton,\n  } = props;\n\n  const isChosenTodo = (todoId: number): boolean => {\n    return currentTodo?.id === todoId;\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo, index) => {\n          const {\n            id,\n            title,\n            completed,\n          } = todo;\n\n          return (\n            <tr\n              data-cy=\"todo\"\n              className={cn(\n                { 'has-background-info-light': index % 2 === 0 },\n              )}\n              key={id}\n            >\n              <td className=\"is-vcentered\">\n                {id}\n              </td>\n\n              <td className=\"is-vcentered\">\n                {completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n\n              <td className=\"is-vcentered is-expanded\">\n                <p className={completed\n                  ? 'has-text-success'\n                  : 'has-text-danger'}\n                >\n                  {title}\n                </p>\n              </td>\n\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => onModalButton(todo)}\n                >\n                  <span className=\"icon\">\n                    <i className={\n                      isChosenTodo(todo.id) && isModalVisible\n                        ? 'far fa-eye-slash'\n                        : 'far fa-eye'\n                    }\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { FC } from 'react';\n\ninterface Props {\n  todoStatusSelect: string,\n  searchQuery: string,\n  onStatusSelect: (status: string) => void,\n  onInputChange: (query: string) => void\n}\n\nexport const TodoFilter: FC<Props> = (props) => {\n  const {\n    todoStatusSelect,\n    searchQuery,\n    onStatusSelect,\n    onInputChange,\n  } = props;\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={todoStatusSelect}\n            onChange={(event) => onStatusSelect(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={searchQuery}\n          onChange={(event) => onInputChange(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {searchQuery !== ''\n            && (\n              // eslint-disable-next-line jsx-a11y/control-has-associated-label\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={() => onInputChange('')}\n              />\n            )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { FC, useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ninterface Props {\n  todo: Todo,\n  onCloseBtn: () => void,\n}\n\nexport const TodoModal: FC<Props> = (props) => {\n  const {\n    id,\n    userId,\n    title,\n    completed,\n  } = props.todo;\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoadedUser, setIsloadedUser] = useState(false);\n\n  useEffect(() => {\n    setIsloadedUser(true);\n\n    getUser(userId)\n      .then(setUser)\n      .finally(() => setIsloadedUser(false));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {(user === null && isLoadedUser)\n        ? <Loader />\n        : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => props.onCloseBtn()}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>}\n\n                {' by '}\n\n                <a href={`mailto:${user?.email || '#'}`}>\n                  {user?.name || 'Anonimous'}\n                </a>\n              </p>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [visibleTodo, setVisibleTodo] = useState<Todo | null>(null);\n  const [isLoaded, setIsloaded] = useState(false);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [todoStatusSelect, setTodoStatusSelect] = useState('all');\n  const [searchQuery, setSearchQuery] = useState('');\n\n  useEffect(() => {\n    getTodos()\n      .then(setTodos);\n    setIsloaded(true);\n  }, []);\n\n  const filterTodosByStatus = (status: string): Todo[] => {\n    switch (status) {\n      case 'active':\n        return todos.filter(todo => todo.completed === false);\n\n      case 'completed':\n        return todos.filter(todo => todo.completed === true);\n\n      default:\n        return todos;\n    }\n  };\n\n  const preparedTodos = searchQuery !== ''\n    ? todos.filter(todo => (\n      todo.title.toLowerCase().includes(searchQuery.toLowerCase())\n    ))\n    : filterTodosByStatus(todoStatusSelect);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                todoStatusSelect={todoStatusSelect}\n                searchQuery={searchQuery}\n                onStatusSelect={(status) => setTodoStatusSelect(status)}\n                onInputChange={(query) => setSearchQuery(query)}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoaded && todos.length > 0\n                ? (\n                  <TodoList\n                    todos={preparedTodos}\n                    currentTodo={visibleTodo}\n                    isModalVisible={isModalVisible}\n                    onModalBtn={(currentTodo: Todo | null) => {\n                      setIsModalVisible(true);\n                      setVisibleTodo(currentTodo);\n                    }}\n                  />\n                )\n                : <Loader />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {(isModalVisible && visibleTodo !== null)\n         && (\n           <TodoModal\n             todo={visibleTodo}\n             onCloseBtn={() => {\n               setIsModalVisible(false);\n             }}\n           />\n         )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}